{"ast":null,"code":"var _jsxFileName = \"D:\\\\Django\\\\frontend\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({\n  todos,\n  completeTodo,\n  removeTodo,\n  updateTodo\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {\n        onClick: () => removeTodo(todo.id),\n        className: \"delete-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {\n        onClick: () => setEdit({\n          id: todo.id,\n          value: todo.text\n        }),\n        className: \"edit-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this));\n};\n\n_s(Todo, \"4hw5hahwwHHMXp9/utZwU04cfWc=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/Django/frontend/src/components/Todo.js"],"names":["React","useState","TodoForm","TodoList","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","id","value","submitUpdate","map","todo","index","isComplete","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,YAAP;AAAqBC,EAAAA,UAArB;AAAiCC,EAAAA;AAAjC,CAAD,KAAkD;AAAA;;AAE3D,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAiBX,QAAQ,CAAC;AAACY,IAAAA,EAAE,EAAC,IAAJ;AAASC,IAAAA,KAAK,EAAC;AAAf,GAAD,CAA9B;;AAEA,QAAMC,YAAY,GAAGD,KAAK,IAAG;AACzBJ,IAAAA,UAAU,CAACC,IAAI,CAACE,EAAN,EAASC,KAAT,CAAV;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAC,IADC;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAOA,MAAIH,IAAI,CAACE,EAAT,EAAY;AACR,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOR,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,kBACb;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAsC,UAAtD;AAAA,4BACI;AAAmB,MAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACJ,EAAN,CAA9C;AAAA,gBACKI,IAAI,CAACG;AADV,OAAUH,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACK,QAAC,iBAAD;AACA,QAAA,OAAO,EAAE,MAAMJ,UAAU,CAACQ,IAAI,CAACJ,EAAN,CADzB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADL,eAIK,QAAC,MAAD;AACA,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC;AAACC,UAAAA,EAAE,EAACI,IAAI,CAACJ,EAAT;AAAYC,UAAAA,KAAK,EAAEG,IAAI,CAACG;AAAxB,SAAD,CADtB;AAEA,QAAA,SAAS,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,KAAuEF,KAAvE;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAeH,CA9BD;;GAAMZ,I;;KAAAA,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport TodoList from './TodoList'\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\n\r\nconst Todo = ({todos,completeTodo, removeTodo, updateTodo}) => {\r\n\r\n    const[edit,setEdit] = useState({id:null,value:\"\"});\r\n\r\n    const submitUpdate = value =>{\r\n        updateTodo(edit.id,value)\r\n        setEdit({\r\n            id:null,\r\n            value: ''\r\n        });\r\n    };\r\n    if (edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n    \r\n    return todos.map((todo,index) =>(\r\n        <div className={todo.isComplete ? 'todo-row complete':'todo-row'} key={index} >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className='icons'>\r\n                 <RiCloseCircleLine \r\n                 onClick={() => removeTodo(todo.id)}\r\n                 className='delete-icon'/>\r\n                 <TiEdit \r\n                 onClick={() => setEdit({id:todo.id,value: todo.text})}\r\n                 className='edit-icon'/>\r\n            </div>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default Todo;\r\n"]},"metadata":{},"sourceType":"module"}